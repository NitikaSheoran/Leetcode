{"leetcode":{"easy":9,"hard":1,"medium":5,"shas":{"0104-maximum-depth-of-binary-tree":{"0104-maximum-depth-of-binary-tree.java":"dc389c20fb7e9b0796ff5c904b4f8a58923ca620","README.md":"3e88d40eac7067a0b69cceb90c76020b6f152ae0","difficulty":"easy"},"README.md":{"":"fde7e608fe2ed9aafaf83399f081792b2a4968f3"},"0110-balanced-binary-tree":{"0110-balanced-binary-tree.java":"0a74a14069857301bd5756f56837b8d55bc681d7","README.md":"1496517dcf0faedc819cbdf10d07de1900d95d9c","difficulty":"easy"},"stats.json":{"":"0c2d8896202158672976105a421b63f9d0e157a8"},"0543-diameter-of-binary-tree":{"0543-diameter-of-binary-tree.java":"278165f8a5ff2b9a781a791c7dcde66e85019969","README.md":"5ef438e39aa6f6497073598c4bd2c8274ababac7","difficulty":"easy"},"0124-binary-tree-maximum-path-sum":{"0124-binary-tree-maximum-path-sum.java":"0d2d65e5804bf3bd780fdca5cec58cda24c89c25","README.md":"ffa0bc8c9c787efac4955cef573cc6ed99caf29a","difficulty":"hard"},"0100-same-tree":{"0100-same-tree.java":"e05738e074c219d88f4ccde15ea44cd99c659a39","README.md":"6b878765115a6a5c9885c763b807805c63b81b78","difficulty":"easy"},"0103-binary-tree-zigzag-level-order-traversal":{"0103-binary-tree-zigzag-level-order-traversal.java":"0e0445b40c0f55fa3e26160018f17dea5428b58a","README.md":"fcd20aa2bad60f78f450527d135d90bfbc83d83a","difficulty":"medium"},"0199-binary-tree-right-side-view":{"0199-binary-tree-right-side-view.java":"e8e4a118b6bda321a631bde69d2d438b960bd3be","README.md":"e5e81cc2d06e4177eb353566d3a36bebd1431bab","difficulty":"medium"},"0101-symmetric-tree":{"0101-symmetric-tree.java":"dfdb83aef7a1c3bbeb0ced5fe8f2c377b317a4fa","README.md":"1f2113012a39cfbad1ebdddb1b47cba18e5fa452","difficulty":"easy"},"1078-remove-outermost-parentheses":{"1078-remove-outermost-parentheses.java":"71cbc2eec95c0e0343689e9c88ee8dfbb751709e","README.md":"c0e9fe5651f0271f974fb5ec8d09e1448d386bb1","difficulty":"easy"},"2465-shifting-letters-ii":{"2465-shifting-letters-ii.java":"635bf0c0c07c2e3fb60608af4ee9ab5080123a2e","README.md":"fab88ab3baad9c29c22b90887eac53a0aa2bdfc3","difficulty":"medium"},"0225-implement-stack-using-queues":{"0225-implement-stack-using-queues.java":"f9fe1426cc821b9b5328e795889859b3ec6b527c","README.md":"b654d8365893c74fe70f24041bb5a9545bcd8d9e","difficulty":"easy"},"0232-implement-queue-using-stacks":{"0232-implement-queue-using-stacks.java":"68fb1fb8d6975ce0859df9e7299e42b7311858c2","README.md":"d0de1ae41764baaa8af874723bd5b1dc85277d89","difficulty":"easy"},"0155-min-stack":{"0155-min-stack.java":"a7910c133ba9ccffa7e134a16f25e0c94aac9a33","README.md":"3902f5dff724cfd4e66625fd89bd17f7b3028c1a","difficulty":"medium"},"1895-minimum-number-of-operations-to-move-all-balls-to-each-box":{"1895-minimum-number-of-operations-to-move-all-balls-to-each-box.java":"74b18f939669b900353347b57b1e987de795d816","README.md":"49de73e5c1523993c904d1f80c45b67ca49fc68d","difficulty":"medium"},"1524-string-matching-in-an-array":{"1524-string-matching-in-an-array.java":"c43ef8ca0dcc271aead1f6a415a9ea7a505a8ec6","README.md":"36658a701ef51d9d53f843931a4807fb28adc65b","difficulty":"easy"}},"solved":15}}